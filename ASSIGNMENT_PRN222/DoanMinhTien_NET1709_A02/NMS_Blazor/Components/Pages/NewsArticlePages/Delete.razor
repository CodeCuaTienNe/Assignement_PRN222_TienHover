@page "/newsarticles/delete"
@using Microsoft.EntityFrameworkCore
@using NMS_BusinessObjects
@using NMS_Repositories
@using NMS_Blazor.Services
@inject INewsArticleRepository NewsArticleRepository
@inject ICategoryRepository CategoryRepository
@inject NavigationManager NavigationManager
@inject AuthService AuthService

<PageTitle>Delete News Article</PageTitle>

<div class="container-fluid p-4">
    <div class="row mb-3">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/newsarticles">News Articles</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Delete Article</li>
                </ol>
            </nav>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger border-0 shadow-sm" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i> @errorMessage
        </div>
    }
    
    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2 text-muted">Loading article...</p>
        </div>
    }
    else if (newsArticle == null)
    {
        <div class="alert alert-warning border-0 shadow-sm">
            <i class="bi bi-exclamation-triangle me-2"></i> News article not found.
        </div>
    }
    else
    {
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card border-0 shadow">
                    <div class="card-header bg-danger text-white">
                        <h2 class="card-title h4 mb-0">
                            <i class="bi bi-trash me-2"></i> Delete Article
                        </h2>
                    </div>
                    
                    <div class="card-body">
                        <div class="alert alert-danger mb-4">
                            <h5 class="alert-heading">
                                <i class="bi bi-exclamation-triangle-fill me-2"></i> Warning!
                            </h5>
                            <p>You are about to permanently delete the article "<strong>@newsArticle.NewsTitle</strong>".</p>
                            <p class="mb-0">This action <strong>cannot</strong> be undone. Are you sure you want to proceed?</p>
                        </div>
                        
                        <div class="p-3 border rounded mb-4">
                            <div class="row">
                                <div class="col-md-4">
                                    <p class="fw-bold mb-1">Article ID:</p>
                                    <p class="text-muted">@newsArticle.NewsArticleId</p>
                                </div>
                                <div class="col-md-4">
                                    <p class="fw-bold mb-1">Created By:</p>
                                    <p class="text-muted">@(newsArticle.CreatedBy?.AccountName ?? "Unknown")</p>
                                </div>
                                <div class="col-md-4">
                                    <p class="fw-bold mb-1">Created Date:</p>
                                    <p class="text-muted">@(newsArticle.CreatedDate?.ToString("dd/MM/yyyy"))</p>
                                </div>
                            </div>
                            
                            <hr/>
                            
                            <div class="row mt-2">
                                <div class="col-md-12">
                                    <p class="fw-bold mb-1">Title:</p>
                                    <p>@newsArticle.NewsTitle</p>
                                </div>
                            </div>
                            
                            <div class="row mt-2">
                                <div class="col-md-12">
                                    <p class="fw-bold mb-1">Headline:</p>
                                    <p>@newsArticle.Headline</p>
                                </div>
                            </div>
                            
                            <div class="row mt-2">
                                <div class="col-md-6">
                                    <p class="fw-bold mb-1">Category:</p>
                                    <p>@(newsArticle.Category?.CategoryName ?? "None")</p>
                                </div>
                                <div class="col-md-6">
                                    <p class="fw-bold mb-1">Status:</p>
                                    <p>
                                        @if (newsArticle.NewsStatus == true)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                        
                        @if (!isUserLoggedIn)
                        {
                            <div class="alert alert-warning mb-3">
                                <i class="bi bi-shield-exclamation me-2"></i>
                                You must be logged in as a staff member to delete articles.
                                <a href="/login" class="alert-link">Log in</a>
                            </div>
                        }
                        else if (userRole != 1 && userRole != 2)
                        {
                            <div class="alert alert-warning mb-3">
                                <i class="bi bi-shield-exclamation me-2"></i>
                                You don't have permission to delete articles. Staff or admin role required.
                            </div>
                        }
                    </div>
                    
                    <div class="card-footer bg-white d-flex justify-content-between">
                        <a href="/newsarticles" class="btn btn-outline-secondary">
                            <i class="bi bi-x-lg me-1"></i> Cancel
                        </a>
                        
                        <div>
                            <a href="@($"/newsarticles/details?newsarticleid={newsArticle.NewsArticleId}")" class="btn btn-outline-primary me-2">
                                <i class="bi bi-eye me-1"></i> View Details
                            </a>
                            
                            <button @onclick="DeleteArticle" 
                                    class="btn btn-danger" 
                                    disabled="@(!isUserLoggedIn || (userRole != 1 && userRole != 2))">
                                <i class="bi bi-trash me-1"></i> Confirm Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private NewsArticle? newsArticle;
    private string? errorMessage;
    private bool isLoading = true;
    private bool isDeleting = false;
    
    // User information
    private bool isUserLoggedIn = false;
    private short? userId = null;
    private string userName = string.Empty;
    private int? userRole = null;

    [SupplyParameterFromQuery]
    private string? NewsArticleId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try {
            // Check authentication status
            await CheckAuthenticationStatus();
            
            // Only Staff (role 1) should be able to delete news articles
            if (!isUserLoggedIn || userRole != 1)
            {
                NavigationManager.NavigateTo("/unauthorized");
                return;
            }
            
            // Load article data
            LoadArticleData();

            isLoading = false;
        }
        catch (Exception ex)
        {
            errorMessage = "Error loading article: " + ex.Message;
            isLoading = false;
        }
    }
    
    private void LoadArticleData()
    {
        try
        {
            // Load the news article
            if (!string.IsNullOrEmpty(NewsArticleId))
            {
                // Get the article by ID from the repository
                newsArticle = NewsArticleRepository.GetNewsArticleById(NewsArticleId);
                
                if (newsArticle == null)
                {
                    errorMessage = "News article not found.";
                    return;
                }
            }
            else
            {
                errorMessage = "News article ID is required.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading article data: {ex.Message}";
        }
    }
    
    private async Task CheckAuthenticationStatus()
    {
        // Get user information from AuthService
        var userInfo = await AuthService.GetCurrentUser();
        
        isUserLoggedIn = userInfo.IsLoggedIn;
        userId = userInfo.UserId;
        userName = userInfo.UserName;
        userRole = userInfo.UserRole;
        
        // Only Staff (role 1) should be able to delete news articles
        if (!isUserLoggedIn || userRole != 1)
        {
            NavigationManager.NavigateTo("/unauthorized");
            return;
        }
    }

    private void DeleteArticle()
    {
        try
        {
            if (newsArticle == null) return;
            
            // Verify user permissions
            if (!isUserLoggedIn || userRole != 1)
            {
                errorMessage = "You don't have permission to delete news articles.";
                return;
            }
            
            // Set deleting state to prevent multiple clicks
            isDeleting = true;

            // Delete the article using the repository
            try 
            {
                NewsArticleRepository.DeleteNewsArticle(newsArticle.NewsArticleId);
                
                // Redirect to the list page after successful deletion
                NavigationManager.NavigateTo("/newsarticles");
            }
            catch (Exception deleteEx)
            {
                isDeleting = false;
                errorMessage = $"Error deleting article: {deleteEx.Message}";
            }
        }
        catch (Exception ex)
        {
            isDeleting = false;
            errorMessage = "Error: " + ex.Message;
        }
    }
}
