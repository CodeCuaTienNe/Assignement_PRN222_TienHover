@page "/categories/details"
@using Microsoft.EntityFrameworkCore
@using NMS_BusinessObjects
@inject IDbContextFactory<NMS_DAOs.FunewsManagementContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Category Details</PageTitle>

<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="mb-0">Category Details</h1>
    </div>

    @if (category is null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else 
    {
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h2 class="mb-0 h4">@category.CategoryName</h2>
                <div class="badge @(category.IsActive == true ? "bg-success" : "bg-danger")">
                    @(category.IsActive == true ? "Active" : "Inactive")
                </div>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-sm-3">Category ID</dt>
                    <dd class="col-sm-9">@category.CategoryId</dd>
                    
                    <dt class="col-sm-3">Category Name</dt>
                    <dd class="col-sm-9">@category.CategoryName</dd>
                    
                    <dt class="col-sm-3">Description</dt>
                    <dd class="col-sm-9">@(string.IsNullOrEmpty(category.CategoryDesciption) ? "N/A" : category.CategoryDesciption)</dd>
                    
                    <dt class="col-sm-3">Parent Category</dt>
                    <dd class="col-sm-9">@(category.ParentCategory?.CategoryName ?? "None")</dd>
                    
                    <dt class="col-sm-3">Status</dt>
                    <dd class="col-sm-9">
                        <span class="badge @(category.IsActive == true ? "bg-success" : "bg-danger")">
                            @(category.IsActive == true ? "Active" : "Inactive")
                        </span>
                    </dd>
                </dl>
            </div>
            <div class="card-footer">
                <div class="d-flex gap-2">
                    <a href="@($"/categories/edit?categoryid={category.CategoryId}")" class="btn btn-primary">
                        <i class="bi bi-pencil me-1"></i> Edit
                    </a>
                    <a href="@($"/categories/delete?categoryid={category.CategoryId}")" class="btn btn-danger">
                        <i class="bi bi-trash me-1"></i> Delete
                    </a>
                    <a href="/categories" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left me-1"></i> Back to List
                    </a>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private Category? category;

    [SupplyParameterFromQuery]
    private short CategoryId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        category = await context.Categories
            .Include(c => c.ParentCategory)
            .FirstOrDefaultAsync(m => m.CategoryId == CategoryId);

        if (category is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
