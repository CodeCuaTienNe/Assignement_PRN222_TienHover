@page "{id}"
@model NMS_Razor.Pages.NewsArticlePage.DetailsModel
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Article Details";
    
    var role = HttpContext.Session.GetInt32("AccountRole");
    var adminRole = int.Parse(Configuration["AdminRole"] ?? "3");
    var staffRole = 1;
    var lecturerRole = 2;
    var currentUserId = HttpContext.Session.GetInt32("AccountId");
}

<h1>News Article Detail</h1>

<div>
    <h4>@Model.NewsArticle.NewsTitle</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Title
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.NewsTitle)
        </dd>
        <dt class="col-sm-2">
            Headline
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.Headline)
        </dd>
        <dt class="col-sm-2">
            Created Date
        </dt>
        <dd class="col-sm-10">
            @(Model.NewsArticle.CreatedDate?.ToString("dd/MM/yyyy HH:mm"))
        </dd>
        <dt class="col-sm-2">
            Content
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.NewsContent)
        </dd>
        <dt class="col-sm-2">
            Source
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.NewsSource)
        </dd>
        <dt class="col-sm-2">
            Status
        </dt>
        <dd class="col-sm-10">
            @(Model.NewsArticle.NewsStatus == true ? "Active" : "Inactive")
        </dd>
        @if (Model.NewsArticle.UpdatedById.HasValue)
        {
            <dt class="col-sm-2">
                Update By
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.NewsArticle.UpdatedById)
            </dd>
            <dt class="col-sm-2">
                Modified Date
            </dt>
            <dd class="col-sm-10">
                @(Model.NewsArticle.ModifiedDate?.ToString("dd/MM/yyyy HH:mm"))
            </dd>
        }
        <dt class="col-sm-2">
            Category
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.Category.CategoryName)
        </dd>
        <dt class="col-sm-2">
            Created By
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsArticle.CreatedBy.AccountName)
        </dd>
    </dl>
</div>

<!-- Add a section for tags -->
<div class="row mt-3">
    <div class="col-md-12">
        <h5>Tags</h5>
        <div class="mb-3">
            @if (Model.ArticleTags != null && Model.ArticleTags.Any())
            {
                @foreach (var tag in Model.ArticleTags)
                {
                    <span class="badge bg-secondary me-1">@tag.TagName</span>
                }
            }
            else
            {
                <p class="text-muted">No tags associated with this article</p>
            }
        </div>
    </div>
</div>

<div>
    @if (role == staffRole && Model.NewsArticle.CreatedById == currentUserId)
    {
        <a asp-page="./Edit" asp-route-id="@Model.NewsArticle.NewsArticleId" class="btn btn-primary">Edit</a>
        <a asp-page="./Delete" asp-route-id="@Model.NewsArticle.NewsArticleId" class="btn btn-danger">Delete</a>
    }
    <a asp-page="./Index" class="btn btn-secondary">Back to List</a>
</div>
